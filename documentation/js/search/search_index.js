var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.122,1,1.333]],["body/controllers/AppController.html",[0,1.652,1,1.963,2,1.274,3,0.755,4,0.622,5,0.622,6,2.215,7,0.622,8,1.963,9,3.373,10,1.814,11,0.066,12,1.274,13,2.825,14,1.274,15,1.652,16,1.172,17,0.904,18,1.547,19,2.215,20,0.755,21,0.503,22,2.825,23,2.215,24,1.514,25,2.825,26,0.049,27,0.049]],["title/modules/AppModule.html",[28,1.333,29,1.333]],["body/modules/AppModule.html",[1,1.886,2,1.366,3,0.571,4,0.47,5,0.47,11,0.066,16,1.344,17,0.683,18,1.598,19,1.674,20,0.571,21,0.38,26,0.041,27,0.041,28,1.623,29,2.365,30,0.963,31,1.366,32,1.674,33,1.674,34,1.674,35,1.895,36,1.945,37,1.371,38,1.371,39,2.135,40,2.375,41,2.375,42,1.371,43,1.371,44,1.371,45,1.674,46,1.144,47,2.135,48,0.969,49,2.135,50,2.135,51,2.135,52,0.571,53,2.135,54,2.135,55,2.135,56,2.135,57,2.135,58,2.135,59,2.135,60,1.371,61,2.135,62,2.135,63,2.135,64,2.135,65,2.135,66,1.674]],["title/injectables/AppService.html",[18,0.946,67,1.122]],["body/injectables/AppService.html",[3,0.805,4,0.664,5,0.664,7,0.664,8,2.046,9,3.455,11,0.065,12,1.359,14,1.359,15,1.722,16,0.964,17,0.964,18,1.453,20,0.805,21,0.536,24,1.615,26,0.051,27,0.051,67,1.722,68,1.935,69,2.363,70,3.013,71,3.013,72,3.013]],["title/controllers/JWTTokenController.html",[0,1.122,73,1.333]],["body/controllers/JWTTokenController.html",[0,0.443,2,0.443,3,0.262,4,0.216,5,0.216,7,0.216,8,0.886,10,1.611,11,0.067,12,1.132,14,1.132,15,1.826,16,0.896,17,0.314,20,0.262,21,0.175,23,0.77,24,1.728,26,0.022,27,0.022,42,0.631,43,0.631,44,0.631,48,1.084,52,0.67,60,2.174,66,1.678,73,0.886,74,0.77,75,0.982,76,2.195,77,1.653,78,3.068,79,1.678,80,1.653,81,1.678,82,0.982,83,3.833,84,0.982,85,0.982,86,1.611,87,1.728,88,1.611,89,2.529,90,2.509,91,0.982,92,0.982,93,0.982,94,0.982,95,1.653,96,0.982,97,0.982,98,3.387,99,1.653,100,0.982,101,0.982,102,0.982,103,0.982,104,0.982,105,1.653,106,0.814,107,0.77,108,1.296,109,2.14,110,0.631,111,0.77,112,0.982,113,0.77,114,1.296,115,0.982,116,1.653,117,1.653,118,3.641,119,1.653,120,3.387,121,0.982,122,0.982,123,0.982,124,0.982,125,1.653,126,0.982,127,1.653,128,1.653,129,2.509,130,1.968,131,1.653,132,1.653,133,0.982,134,0.982,135,1.296,136,0.982,137,0.982,138,0.982,139,0.982,140,1.653,141,0.982,142,0.982,143,1.653,144,0.982,145,2.195,146,1.653,147,0.982,148,1.968,149,1.653,150,1.653,151,0.982,152,1.653,153,0.982,154,0.982,155,0.982,156,0.982,157,0.982,158,0.982,159,0.982]],["title/modules/JWTTokenModule.html",[28,1.333,35,1.122]],["body/modules/JWTTokenModule.html",[2,1.455,3,0.624,4,0.514,5,0.514,11,0.066,16,1.383,17,0.748,20,0.624,21,0.416,26,0.043,27,0.043,28,1.728,30,1.053,31,1.455,35,1.95,36,2.07,37,1.499,38,1.499,40,2.529,41,1.831,42,1.499,43,1.499,44,1.499,45,1.831,46,1.251,48,0.748,73,1.979,106,1.645,107,1.831,110,1.499,160,1.831,161,1.831,162,2.335,163,2.335,164,1.831,165,2.335,166,2.335,167,2.335,168,3.225,169,2.335,170,2.335,171,2.335]],["title/injectables/JWTTokenService.html",[67,1.122,106,0.946]],["body/injectables/JWTTokenService.html",[3,0.575,4,0.474,5,0.474,7,0.474,8,1.633,11,0.066,12,1.595,14,1.375,16,1.231,17,0.689,20,0.575,21,0.383,24,1.633,26,0.041,27,0.041,46,1.154,48,0.689,52,0.945,67,1.375,68,1.383,78,3.303,79,2.39,81,2.39,86,2.27,87,1.895,88,2.27,106,1.16,113,2.39,114,1.689,148,1.689,164,1.689,172,1.689,173,2.154,174,3.015,175,2.154,176,3.047,177,3.047,178,2.154,179,2.154,180,3.047,181,3.047,182,2.154,183,2.154,184,1.383,185,2.154,186,3.047,187,2.154,188,2.154]],["title/interfaces/SwaggerConfig.html",[189,1.333,190,1.333]],["body/interfaces/SwaggerConfig.html",[3,0.738,4,0.608,5,0.608,7,0.608,11,0.063,15,2.188,20,0.738,26,0.048,27,0.048,52,1.139,189,1.48,190,1.935,191,2.762,192,2.166,193,2.831,194,2.738,195,3.344,196,3.344,197,3.344]],["title/classes/User.html",[21,0.443,48,0.796]],["body/classes/User.html",[3,0.652,4,0.537,5,0.537,7,0.537,10,2.604,11,0.065,12,1.83,15,1.975,16,0.78,20,0.652,21,0.434,26,0.045,27,0.045,48,1.063,52,1.084,60,2.425,87,2.024,89,2.962,135,2.962,184,1.565,193,2.605,198,2.438,199,1.912,200,4.481,201,2.438,202,3.321,203,3.777,204,2.438,205,2.438,206,2.438,207,3.321]],["title/coverage.html",[208,2.161]],["body/coverage.html",[0,1.555,1,1.381,5,0.567,6,2.021,11,0.064,18,0.981,21,0.459,26,0.046,27,0.046,48,0.825,52,0.689,67,1.555,69,2.021,73,1.381,74,2.021,106,0.981,130,2.021,172,2.021,189,1.381,190,1.381,192,2.021,199,2.021,208,1.654,209,2.577,210,2.577,211,2.577,212,4.677,213,3.448,214,3.885,215,2.577,216,2.021,217,3.448,218,2.021,219,3.885,220,2.021,221,2.577,222,2.021,223,2.021,224,2.021,225,2.577,226,2.577]],["title/dependencies.html",[31,1.346,227,2.09]],["body/dependencies.html",[11,0.067,17,0.792,26,0.045,27,0.045,31,1.116,46,1.326,76,1.94,108,1.94,110,1.589,111,2.631,145,1.94,184,1.589,228,4.081,229,2.474,230,2.474,231,2.474,232,2.474,233,2.474,234,2.474,235,2.474,236,2.474,237,2.474,238,2.474,239,2.474,240,2.474,241,3.806,242,2.474,243,2.474,244,2.474,245,2.474,246,2.474,247,2.474,248,2.474,249,2.474,250,2.474,251,3.355,252,2.474,253,2.474,254,2.474,255,2.474,256,2.474,257,2.474,258,2.474,259,2.474,260,2.474,261,1.94,262,2.474]],["title/miscellaneous/functions.html",[263,1.12,264,2.34]],["body/miscellaneous/functions.html",[7,0.711,11,0.061,14,1.456,26,0.053,27,0.053,52,0.862,86,2.072,87,1.73,88,2.072,216,2.531,218,3.391,223,2.531,224,3.125,263,1.73,264,2.531,265,3.228,266,3.228,267,3.228,268,3.985,269,2.072,270,3.228]],["title/index.html",[7,0.46,271,2.09,272,2.09]],["body/index.html",[4,0.493,11,0.064,26,0.042,27,0.042,174,1.757,194,1.439,208,1.439,261,1.757,269,1.439,273,2.241,274,2.241,275,3.133,276,2.241,277,2.241,278,2.241,279,2.241,280,2.241,281,3.613,282,2.241,283,2.241,284,2.241,285,4.379,286,2.241,287,2.241,288,4.266,289,2.241,290,2.241,291,3.133,292,2.241,293,2.241,294,2.241,295,2.241,296,3.133,297,3.133,298,2.241,299,2.241,300,2.241,301,3.133,302,3.133,303,2.241,304,2.241,305,2.241,306,2.241,307,2.241,308,1.757,309,2.241,310,2.241,311,2.241,312,2.241,313,2.241,314,2.241,315,2.241,316,2.241,317,2.241,318,2.241,319,2.241,320,2.241,321,2.241,322,2.241,323,2.241,324,2.241,325,2.241,326,2.241]],["title/modules.html",[30,1.519]],["body/modules.html",[11,0.056,26,0.056,27,0.056,29,1.889,30,1.59,35,1.59,308,3.297,327,4.204,328,4.204,329,4.204]],["title/overview.html",[330,2.64]],["body/overview.html",[2,1.304,11,0.06,18,1.564,21,0.514,26,0.05,27,0.05,29,2.462,30,1.304,31,1.677,32,2.267,33,2.267,34,2.267,35,2.025,36,2.387,37,1.856,38,1.856,68,1.856,106,1.564,160,2.267,161,2.267,189,1.549,330,2.267,331,4.11,332,3.718]],["title/miscellaneous/variables.html",[263,1.12,333,2.34]],["body/miscellaneous/variables.html",[7,0.684,11,0.064,26,0.052,27,0.052,52,0.83,190,1.665,194,1.995,195,2.436,196,2.436,197,2.436,220,2.436,222,3.052,263,1.665,269,1.995,333,2.436,334,3.107,335,3.107,336,3.107,337,4.25,338,4.25,339,3.107,340,3.107]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":332,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":171,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["2",{"_index":331,"title":{},"body":{"overview.html":{}}}],["2.3.3",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":122,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["3.0.2",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["4.0.0",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["4.7.2",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":309,"title":{},"body":{"index.html":{}}}],["any):promise",{"_index":186,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["app",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":280,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":78,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["author",{"_index":319,"title":{},"body":{"index.html":{}}}],["await",{"_index":120,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["backers",{"_index":310,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":101,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["badrequestexception('invalid",{"_index":131,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["bcrypt",{"_index":108,"title":{},"body":{"controllers/JWTTokenController.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":133,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["bcrypt.hash(password",{"_index":121,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["body('email",{"_index":116,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["body('name",{"_index":115,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["body('password",{"_index":117,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["bootstrap",{"_index":218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":329,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":327,"title":{},"body":{"modules.html":{}}}],["building",{"_index":276,"title":{},"body":{"index.html":{}}}],["catch",{"_index":153,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["chelli1",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":21,"title":{"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"classes/User.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":198,"title":{},"body":{"classes/User.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_jwttokenmodule",{"_index":160,"title":{},"body":{"modules/JWTTokenModule.html":{},"overview.html":{}}}],["cluster_jwttokenmodule_providers",{"_index":161,"title":{},"body":{"modules/JWTTokenModule.html":{},"overview.html":{}}}],["column",{"_index":200,"title":{},"body":{"classes/User.html":{}}}],["compat",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":179,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["console.log(\"cookie",{"_index":147,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["console.log(\"jvcbvj",{"_index":155,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["console.log(\"token",{"_index":139,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["const",{"_index":118,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(userrepository",{"_index":173,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/JWTTokenController.html":{}},"body":{"controllers/AppController.html":{},"controllers/JWTTokenController.html":{},"coverage.html":{}}}],["controller('jwt",{"_index":112,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"overview.html":{}}}],["cookie",{"_index":145,"title":{},"body":{"controllers/JWTTokenController.html":{},"dependencies.html":{}}}],["coverage",{"_index":208,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdocument",{"_index":224,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["credentials",{"_index":132,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["data",{"_index":148,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["data['id",{"_index":151,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["database",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/JWTTokenController.html":{},"classes/User.html":{}}}],["default",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"classes/User.html":{}}}],["delete",{"_index":124,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":194,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["development",{"_index":287,"title":{},"body":{"index.html":{}}}],["disable",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{}}}],["documentation",{"_index":209,"title":{},"body":{"coverage.html":{}}}],["e",{"_index":154,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["e2e",{"_index":298,"title":{},"body":{"index.html":{}}}],["ecommmerce",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":277,"title":{},"body":{"index.html":{}}}],["email",{"_index":89,"title":{},"body":{"controllers/JWTTokenController.html":{},"classes/User.html":{}}}],["entities",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":207,"title":{},"body":{"classes/User.html":{}}}],["entity/user.entity",{"_index":164,"title":{},"body":{"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{}}}],["expiresin",{"_index":170,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{}}}],["express",{"_index":111,"title":{},"body":{"controllers/JWTTokenController.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"coverage.html":{}}}],["framework",{"_index":275,"title":{},"body":{"index.html":{}}}],["function",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":264,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"user",{"_index":142,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["get('user",{"_index":99,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":271,"title":{"index.html":{}},"body":{}}],["grow",{"_index":305,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":119,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["hello",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":316,"title":{},"body":{"index.html":{}}}],["host",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["httponly",{"_index":138,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["https://nestjs.com",{"_index":323,"title":{},"body":{"index.html":{}}}],["id",{"_index":135,"title":{},"body":{"controllers/JWTTokenController.html":{},"classes/User.html":{}}}],["identifier",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"classes/User.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AppService.html":{},"injectables/JWTTokenService.html":{}},"body":{"injectables/AppService.html":{},"injectables/JWTTokenService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"injectables/JWTTokenService.html":{},"overview.html":{}}}],["injectrepository",{"_index":183,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["injectrepository(user",{"_index":185,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["installation",{"_index":284,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":286,"title":{},"body":{"index.html":{}}}],["interface",{"_index":189,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":191,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["join",{"_index":312,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":76,"title":{},"body":{"controllers/JWTTokenController.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":163,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["jwtmodule.register",{"_index":167,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["jwtservice",{"_index":109,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["jwttoken.controller",{"_index":165,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["jwttoken.service",{"_index":107,"title":{},"body":{"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{}}}],["jwttoken/entity/user.entity",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["jwttoken/jwttoke.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["jwttokencontroller",{"_index":73,"title":{"controllers/JWTTokenController.html":{}},"body":{"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"coverage.html":{}}}],["jwttokenmodule",{"_index":35,"title":{"modules/JWTTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["jwttokenservice",{"_index":106,"title":{"injectables/JWTTokenService.html":{}},"body":{"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":320,"title":{},"body":{"index.html":{}}}],["license",{"_index":326,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":302,"title":{},"body":{"index.html":{}}}],["local",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["localhost",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":79,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["login(condition",{"_index":177,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["login(email",{"_index":82,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["logout",{"_index":80,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["logout(@res",{"_index":157,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["logout(response",{"_index":91,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":140,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["metadata",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["mgmnt",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":263,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":301,"title":{},"body":{"index.html":{}}}],["mode",{"_index":291,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":315,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":321,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":281,"title":{},"body":{"index.html":{}}}],["nest_auth",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["nestframework",{"_index":325,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":110,"title":{},"body":{"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"dependencies.html":{}}}],["new",{"_index":130,"title":{},"body":{"controllers/JWTTokenController.html":{},"coverage.html":{}}}],["node.js",{"_index":274,"title":{},"body":{"index.html":{}}}],["npm",{"_index":285,"title":{},"body":{"index.html":{}}}],["number",{"_index":202,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":303,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opertaions",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":88,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"overview.html":{}}}],["overview",{"_index":330,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":227,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":86,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":127,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["password",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"classes/User.html":{}}}],["please",{"_index":313,"title":{},"body":{"index.html":{}}}],["port",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":103,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["post(\"login",{"_index":126,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["post(\"logout",{"_index":156,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["post('/register",{"_index":95,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["post('login",{"_index":84,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["post('logout",{"_index":92,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["prefix",{"_index":75,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["prettier/prettier",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{}}}],["primarygeneratedcolumn",{"_index":203,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":114,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["production",{"_index":293,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":273,"title":{},"body":{"index.html":{}}}],["project",{"_index":304,"title":{},"body":{"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["properties",{"_index":193,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"classes/User.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{}}}],["read",{"_index":314,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/JWTTokenController.html":{}}}],["reflect",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":81,"title":{},"body":{"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["register(data",{"_index":181,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["register(name",{"_index":94,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["repository",{"_index":174,"title":{},"body":{"injectables/JWTTokenService.html":{},"index.html":{}}}],["req",{"_index":104,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["request",{"_index":98,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["request.cookies['jwt",{"_index":146,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["res",{"_index":105,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"overview.html":{}}}],["response",{"_index":83,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["response.clearcookie('jwt",{"_index":158,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["response.cookie('jwt",{"_index":137,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["result",{"_index":152,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":288,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":278,"title":{},"body":{"index.html":{}}}],["secret",{"_index":168,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["server",{"_index":261,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["side",{"_index":279,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":169,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"index.html":{}}}],["sponsors",{"_index":307,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/jwttoken/entity/user.entity.ts",{"_index":199,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/jwttoken/entity/user.entity.ts:10",{"_index":204,"title":{},"body":{"classes/User.html":{}}}],["src/jwttoken/entity/user.entity.ts:13",{"_index":205,"title":{},"body":{"classes/User.html":{}}}],["src/jwttoken/entity/user.entity.ts:16",{"_index":201,"title":{},"body":{"classes/User.html":{}}}],["src/jwttoken/entity/user.entity.ts:19",{"_index":206,"title":{},"body":{"classes/User.html":{}}}],["src/jwttoken/jwttoke.module.ts",{"_index":162,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["src/jwttoken/jwttoken.controller.ts",{"_index":74,"title":{},"body":{"controllers/JWTTokenController.html":{},"coverage.html":{}}}],["src/jwttoken/jwttoken.controller.ts:16",{"_index":96,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["src/jwttoken/jwttoken.controller.ts:33",{"_index":85,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["src/jwttoken/jwttoken.controller.ts:78",{"_index":100,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["src/jwttoken/jwttoken.controller.ts:91",{"_index":93,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["src/jwttoken/jwttoken.service.ts",{"_index":172,"title":{},"body":{"injectables/JWTTokenService.html":{},"coverage.html":{}}}],["src/jwttoken/jwttoken.service.ts:14",{"_index":182,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["src/jwttoken/jwttoken.service.ts:18",{"_index":178,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["src/jwttoken/jwttoken.service.ts:8",{"_index":175,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["src/main.ts",{"_index":216,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger/swagger.config.ts",{"_index":220,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/swagger.interface.ts",{"_index":192,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/swagger/swagger.ts",{"_index":223,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":289,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":292,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":294,"title":{},"body":{"index.html":{}}}],["started",{"_index":272,"title":{"index.html":{}},"body":{}}],["starter",{"_index":283,"title":{},"body":{"index.html":{}}}],["statements",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":317,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JWTTokenController.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{}}}],["succes",{"_index":159,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["success",{"_index":141,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["support",{"_index":308,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":328,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["swagger_config",{"_index":222,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":190,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":195,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":297,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":300,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":299,"title":{},"body":{"index.html":{}}}],["tests",{"_index":296,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":306,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.jwtservice.signasync",{"_index":134,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["this.jwtservice.verifyasync(cookie",{"_index":149,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["this.jwttokenservice.login",{"_index":128,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["this.jwttokenservice.register",{"_index":123,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["this.userrepository.findone(condition",{"_index":188,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["this.userrepository.save(data",{"_index":187,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["throw",{"_index":129,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["title",{"_index":196,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":77,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["touch",{"_index":318,"title":{},"body":{"index.html":{}}}],["true",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{}}}],["try",{"_index":144,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["twitter",{"_index":324,"title":{},"body":{"index.html":{}}}],["type",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"injectables/JWTTokenService.html":{},"interfaces/SwaggerConfig.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":184,"title":{},"body":{"injectables/JWTTokenService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":166,"title":{},"body":{"modules/JWTTokenModule.html":{}}}],["typeormmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":282,"title":{},"body":{"index.html":{}}}],["ui",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":150,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["unit",{"_index":295,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":90,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["user",{"_index":48,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/JWTTokenController.html":{},"modules/JWTTokenModule.html":{},"injectables/JWTTokenService.html":{},"classes/User.html":{},"coverage.html":{}}}],["user(@req",{"_index":143,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["user(request",{"_index":97,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["user.id",{"_index":136,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["user.password",{"_index":125,"title":{},"body":{"controllers/JWTTokenController.html":{}}}],["username",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":176,"title":{},"body":{"injectables/JWTTokenService.html":{}}}],["value",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":333,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":197,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["watch",{"_index":290,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["website",{"_index":322,"title":{},"body":{"index.html":{}}}],["world",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":311,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/JWTTokenModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nJWTTokenModule\n\nJWTTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nJWTTokenModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JWTTokenModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { User } from './jwtToken/entity/user.entity';\nimport { JWTTokenModule } from './jwtToken/jwtToke.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n    type: 'mysql',\n    host: 'localhost',\n    port: 3306,\n    username: 'root',\n    password: 'Chelli1@',\n    database: 'nest_auth',\n    entities: [User],\n    synchronize: true,\n  }), JWTTokenModule,]\n  ,\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JWTTokenController.html":{"url":"controllers/JWTTokenController.html","title":"controller - JWTTokenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JWTTokenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwtToken/jwtToken.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jwt-token\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/jwtToken/jwtToken.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/jwtToken/jwtToken.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(name: string, email: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/jwtToken/jwtToken.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in src/jwtToken/jwtToken.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { BadRequestException, Body, Controller, Post, Req, Res, Get } from '@nestjs/common';\nimport { JWTTokenService } from './jwtToken.service';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response, Request } from 'express';\n\n@Controller('jwt-token')\nexport class JWTTokenController {\n    constructor(\n        private readonly jwtTokenService: JWTTokenService,\n        private jwtService: JwtService\n    ) { }\n\n    @Post('/register')\n    async register(\n        @Body('name') name: string,\n        @Body('email') email: string,\n        @Body('password') password: string\n    ) {\n\n        const hashedPassword = await bcrypt.hash(password, 20)\n        const user = await this.jwtTokenService.register({\n            name,\n            email,\n            password: hashedPassword\n        })\n        delete user.password;\n        return user;\n    }\n\n    @Post(\"login\")\n    async login(\n        @Body('email') email: string,\n        @Body('password') password: string,\n        @Res({ passthrough: true }) response: Response\n    ) {\n\n        const user = await this.jwtTokenService.login({ email });\n\n        if (!user) {\n            throw new BadRequestException('Invalid Credentials');\n        }\n        if (!await bcrypt.compare(password, user.password)) {\n            throw new BadRequestException('invalid Credentials');\n        }\n\n\n        const jwt = await this.jwtService.signAsync({ id: user.id });\n        response.cookie('jwt', jwt, { httpOnly: true });\n        console.log(\"token: \", jwt)\n        // return {\n        //     message: 'Success'\n        // };\n\n        return jwt;\n    }\n\n    // @Get(\"user\")\n    // async user(@Req() request: Request) {\n    //     try {\n    //         const cookie = request.cookies['jwt'];\n    //         console.log(\"cookie: \", cookie)\n    //         const data = await this.jwtService.verifyAsync(cookie);\n    //         if (!data) {\n    //             throw new UnauthorizedException();\n    //         }\n    //         const user = await this.jwtTokenService.login({ id: data['id'] })\n    //         const { password, ...result } = user;\n    //         return result;\n    //     }\n    //     catch (e) {\n    //         throw new UnauthorizedException();\n    //     }\n    // }\n\n    @Get('user')\n    async user(@Req() request: Request) {\n\n        const cookie = request.cookies['jwt'];\n\n        // const data = await this.jwtService.verifyAsync(cookie);\n        console.log(\"jvcbvj\", cookie);\n\n        return cookie;\n\n        // return data;\n    }\n\n    @Post(\"logout\")\n    async logout(@Res({ passthrough: true }) response: Response) {\n        response.clearCookie('jwt');\n        return {\n            message: 'succes'\n        }\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JWTTokenModule.html":{"url":"modules/JWTTokenModule.html","title":"module - JWTTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    JWTTokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JWTTokenModule\n\n\n\ncluster_JWTTokenModule_providers\n\n\n\n\nJWTTokenService\n\nJWTTokenService\n\n\n\nJWTTokenModule\n\nJWTTokenModule\n\nJWTTokenModule -->\n\nJWTTokenService->JWTTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jwtToken/jwtToke.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JWTTokenService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JWTTokenController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\n\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entity/user.entity';\nimport { JWTTokenController } from './jwtToken.controller';\nimport { JWTTokenService } from './jwtToken.service';\n\n\n@Module({\n    imports: [TypeOrmModule.forFeature([User]),\n\n    JwtModule.register({\n        secret: 'secret',\n        signOptions: { expiresIn: '1d' }\n    })],\n    controllers: [JWTTokenController],\n    providers: [JWTTokenService],\n})\nexport class JWTTokenModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTTokenService.html":{"url":"injectables/JWTTokenService.html","title":"injectable - JWTTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JWTTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwtToken/jwtToken.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/jwtToken/jwtToken.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(condition: any)\n                \n            \n\n\n            \n                \n                    Defined in src/jwtToken/jwtToken.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/jwtToken/jwtToken.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './entity/user.entity';\n\n@Injectable()\nexport class JWTTokenService {\n    constructor(\n        @InjectRepository(User)\n        private userRepository: Repository,\n    ) { }\n\n    async register(data : any):Promise{\n        return this.userRepository.save(data);\n    }\n\n    async login(condition : any):Promise{\n        return this.userRepository.findOne(condition);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger/swagger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  title: string;\n  description: string;\n  version: string;\n  tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwtToken/entity/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jwtToken/entity/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jwtToken/entity/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jwtToken/entity/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jwtToken/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n\n@Entity()\nexport class User {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @Column()\n    email: string;\n\n    @Column()\n    password: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jwtToken/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/jwtToken/jwtToken.controller.ts\n            \n            controller\n            JWTTokenController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/jwtToken/jwtToken.service.ts\n            \n            injectable\n            JWTTokenService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            bcrypt : ^5.0.1\n        \n            cookie-parser : ^1.4.6\n        \n            mysql2 : ^2.3.3\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.1\n        \n            rxjs-compat : ^6.6.7\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n        \n            webpack-dev-server : ^4.7.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JWTTokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_JWTTokenModule\n\n\n\ncluster_JWTTokenModule_providers\n\n\n\n\nJWTTokenModule\n\nJWTTokenModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nJWTTokenModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJWTTokenService\n\nJWTTokenService\n\nJWTTokenModule -->\n\nJWTTokenService->JWTTokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Ecommmerce App Mgmnt',\n  description: ' Ecommmerce Mgmnt Opertaions ',\n  version: '1.0',\n  tags: ['Ecommmerce Mgmnt'],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
